import physipy
import physipandas
from physipandas import QuantityArray
import pandas as pd

import unittest


class TestCase(unittest.TestCase):
    
    def test_00_creation_like_categorical(self):
        """
        Creation according to pandas' Categorical
        https://pandas.pydata.org/pandas-docs/stable/user_guide/categorical.html
        """

        arr = np.arange(10)
        arr_m = arr*m
        
        
        # s = pd.Series(["a", "b", "c", "a"], 
        # dtype="category")
        s = pd.Series(arr_m, 
                     dtype="physipy[m]")
        
        # df = pd.DataFrame({"A": ["a", "b", "c", "a"]})
        # df["B"] = df["A"].astype("category")
        df = pd.DataFrame({"A": arr*m})
        df["B"] = df["A"].astype("physipy[m]")
        
        
        # raw_cat = pd.Categorical(
        #     ["a", "b", "c", "a"], 
        #     categories=["b", "c", "d"], ordered=False
        # )
        # s = pd.Series(raw_cat)
        raw_phy = QuantityArray(
            arr*m, dtype="physipy[m]"
        )
        s = pd.Series(raw_phy)
        
        # pd.DataFrame({"A": list("abca"), 
        #    "B": list("bccd")},
        #    dtype="category")
        pd.DataFrame({"A": arr,
                     "B":2*arr},
                    dtype="physipy[m]")
        
        
    def test_10_creation_like_pintpandas(self):
        """
        Creation according to pint
        https://github.com/hgrecco/pint-pandas/blob/master/notebooks/pandas_support.ipynb
        """
        #df = pd.DataFrame({
        #    "torque": pd.Series([1, 2, 2, 3], 
        #                dtype="pint[lbf ft]"),
        #    "angular_velocity": pd.Series([1, 2, 2, 3], 
        #                            dtype="pint[rpm]"),
        #    })
        df = pd.DataFrame({
            "height": pd.Series(arr, 
                               dtype="physipy[m]")
        })
        
        df = pd.DataFrame({
            "length" : pd.Series([1,2],
                                 dtype="pint[m]"),
            "width" : PA_([2,3], 
                          dtype="pint[m]"),
            "distance" : PA_([2,3], 
                             dtype="m"),
            "height" : PA_([2,3], 
                           dtype=ureg.m),
            "depth" : PA_.from_1darray_quantity(Q_([2,3], 
                                                   ureg.m)),
        })
        
    def test_20_TDD(self):
        
        df = pd.DataFrame({
            "TCN":np.linspace(260, 320)*K,
        })